{
  # Colemak keyboard layout mappings
  extraConfigLua = ''
    -- Colemak keyboard layout remappings
    vim.keymap.set("", "d", "g", { noremap = true })
    vim.keymap.set("", "e", "k", { noremap = true })
    vim.keymap.set("", "f", "e", { noremap = true })
    vim.keymap.set("", "g", "t", { noremap = true })
    vim.keymap.set("", "i", "l", { noremap = true })
    vim.keymap.set("", "j", "y", { noremap = true })
    vim.keymap.set("", "k", "n", { noremap = true })
    vim.keymap.set("", "l", "u", { noremap = true })
    vim.keymap.set("", "n", "j", { noremap = true })
    vim.keymap.set("", "o", "p", { noremap = true })
    vim.keymap.set("", "p", "r", { noremap = true })
    vim.keymap.set("", "r", "s", { noremap = true })
    vim.keymap.set("", "s", "d", { noremap = true })
    vim.keymap.set("", "t", "f", { noremap = true })
    vim.keymap.set("", "u", "i", { noremap = true })
    vim.keymap.set("", "y", "o", { noremap = true })

    -- Upper case mappings
    vim.keymap.set("", "D", "G", { noremap = true })
    vim.keymap.set("", "E", "K", { noremap = true })
    vim.keymap.set("", "F", "E", { noremap = true })
    vim.keymap.set("", "G", "T", { noremap = true })
    vim.keymap.set("", "I", "L", { noremap = true })
    vim.keymap.set("", "J", "Y", { noremap = true })
    vim.keymap.set("", "K", "N", { noremap = true })
    vim.keymap.set("", "L", "U", { noremap = true })
    vim.keymap.set("", "N", "J", { noremap = true })
    vim.keymap.set("", "O", "P", { noremap = true })
    vim.keymap.set("", "P", "R", { noremap = true })
    vim.keymap.set("", "R", "S", { noremap = true })
    vim.keymap.set("", "S", "D", { noremap = true })
    vim.keymap.set("", "T", "F", { noremap = true })
    vim.keymap.set("", "U", "I", { noremap = true })
    vim.keymap.set("", "Y", "O", { noremap = true })
  '';
  plugins.nvim-tree = {
    onAttach = {
      __raw = ''
        function(bufnr)
          local api = require "nvim-tree.api"

          local function opts(desc)
            return { desc = "nvim-tree: " .. desc, buffer = bufnr, noremap = true, silent = true, nowait = true }
          end

          vim.keymap.set("n", "<C-]>",          api.tree.change_root_to_node,       opts("CD"))
          vim.keymap.set("n", "<C-f>",          api.node.open.replace_tree_buffer,  opts("Open: In Place"))
          vim.keymap.set("n", "<C-e>",          api.node.show_info_popup,           opts("Info"))
          vim.keymap.set("n", "<C-p>",          api.fs.rename_sub,                  opts("Rename: Omit Filename"))
          vim.keymap.set("n", "<C-g>",          api.node.open.tab,                  opts("Open: New Tab"))
          vim.keymap.set("n", "<C-t>",          api.node.open.vertical,             opts("Open: Vertical Split"))
          vim.keymap.set("n", "<C-s>",          api.node.open.horizontal,           opts("Open: Horizontal Split"))
          vim.keymap.set("n", "<BS>",           api.node.navigate.parent_close,     opts("Close Directory"))
          vim.keymap.set("n", "<CR>",           api.node.open.edit,                 opts("Open"))
          vim.keymap.set("n", "<Tab>",          api.node.open.preview,              opts("Open Preview"))
          vim.keymap.set("n", ">",              api.node.navigate.sibling.next,     opts("Next Sibling"))
          vim.keymap.set("n", "<",              api.node.navigate.sibling.prev,     opts("Previous Sibling"))
          vim.keymap.set("n", ".",              api.node.run.cmd,                   opts("Run Command"))
          vim.keymap.set("n", "-",              api.tree.change_root_to_parent,     opts("Up"))
          vim.keymap.set("n", "a",              api.fs.create,                      opts("Create File Or Directory"))
          vim.keymap.set("n", "bs",             api.marks.bulk.delete,              opts("Delete Bookmarked"))
          vim.keymap.set("n", "bg",             api.marks.bulk.trash,               opts("Trash Bookmarked"))
          vim.keymap.set("n", "bmv",            api.marks.bulk.move,                opts("Move Bookmarked"))
          vim.keymap.set("n", "B",              api.tree.toggle_no_buffer_filter,   opts("Toggle Filter: No Buffer"))
          vim.keymap.set("n", "c",              api.fs.copy.node,                   opts("Copy"))
          vim.keymap.set("n", "C",              api.tree.toggle_git_clean_filter,   opts("Toggle Filter: Git Clean"))
          vim.keymap.set("n", "[c",             api.node.navigate.git.prev,         opts("Prev Git"))
          vim.keymap.set("n", "]c",             api.node.navigate.git.next,         opts("Next Git"))
          vim.keymap.set("n", "s",              api.fs.remove,                      opts("Delete"))
          vim.keymap.set("n", "S",              api.fs.trash,                       opts("Trash"))
          vim.keymap.set("n", "F",              api.tree.expand_all,                opts("Expand All"))
          vim.keymap.set("n", "f",              api.fs.rename_basename,             opts("Rename: Basename"))
          vim.keymap.set("n", "]f",             api.node.navigate.diagnostics.next, opts("Next Diagnostic"))
          vim.keymap.set("n", "[f",             api.node.navigate.diagnostics.prev, opts("Prev Diagnostic"))
          vim.keymap.set("n", "T",              api.live_filter.clear,              opts("Live Filter: Clear"))
          vim.keymap.set("n", "t",              api.live_filter.start,              opts("Live Filter: Start"))
          vim.keymap.set("n", "d?",             api.tree.toggle_help,               opts("Help"))
          vim.keymap.set("n", "dj",             api.fs.copy.absolute_path,          opts("Copy Absolute Path"))
          vim.keymap.set("n", "df",             api.fs.copy.basename,               opts("Copy Basename"))
          vim.keymap.set("n", "H",              api.tree.toggle_hidden_filter,      opts("Toggle Filter: Dotfiles"))
          vim.keymap.set("n", "U",              api.tree.toggle_gitignore_filter,   opts("Toggle Filter: Git Ignore"))
          vim.keymap.set("n", "N",              api.node.navigate.sibling.last,     opts("Last Sibling"))
          vim.keymap.set("n", "E",              api.node.navigate.sibling.first,    opts("First Sibling"))
          vim.keymap.set("n", "I",              api.node.open.toggle_group_empty,   opts("Toggle Group Empty"))
          vim.keymap.set("n", "M",              api.tree.toggle_no_bookmark_filter, opts("Toggle Filter: No Bookmark"))
          vim.keymap.set("n", "m",              api.marks.toggle,                   opts("Toggle Bookmark"))
          vim.keymap.set("n", "y",              api.node.open.edit,                 opts("Open"))
          vim.keymap.set("n", "Y",              api.node.open.no_window_picker,     opts("Open: No Window Picker"))
          vim.keymap.set("n", "o",              api.fs.paste,                       opts("Paste"))
          vim.keymap.set("n", "O",              api.node.navigate.parent,           opts("Parent Directory"))
          vim.keymap.set("n", "q",              api.tree.close,                     opts("Close"))
          vim.keymap.set("n", "p",              api.fs.rename,                      opts("Rename"))
          vim.keymap.set("n", "P",              api.tree.reload,                    opts("Refresh"))
          vim.keymap.set("n", "r",              api.node.run.system,                opts("Run System"))
          vim.keymap.set("n", "R",              api.tree.search_node,               opts("Search"))
          vim.keymap.set("n", "l",              api.fs.rename_full,                 opts("Rename: Full Path"))
          vim.keymap.set("n", "L",              api.tree.toggle_custom_filter,      opts("Toggle Filter: Hidden"))
          vim.keymap.set("n", "W",              api.tree.collapse_all,              opts("Collapse"))
          vim.keymap.set("n", "x",              api.fs.cut,                         opts("Cut"))
          vim.keymap.set("n", "j",              api.fs.copy.filename,               opts("Copy Name"))
          vim.keymap.set("n", "J",              api.fs.copy.relative_path,          opts("Copy Relative Path"))
          vim.keymap.set("n", "<2-LeftMouse>",  api.node.open.edit,                 opts("Open"))
          vim.keymap.set("n", "<2-RightMouse>", api.tree.change_root_to_node,       opts("CD"))
        end
      '';
    };
  };
}
